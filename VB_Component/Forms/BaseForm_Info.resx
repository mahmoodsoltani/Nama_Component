<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_Cancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btn_Save.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>